# Basic proxy setup taken from: https://stackoverflow.com/questions/46060028/how-to-use-nginx-as-forward-proxy-for-any-requested-location
# Cache config for proxy_cache: https://www.nginx.com/blog/nginx-caching-guide/

## Cache configuration
proxy_cache_path /tmp/fwd_proxy_cache levels=1:2 keys_zone=fwd_proxy_cache:10m max_size=10g inactive=365d use_temp_path=off;
proxy_cache_convert_head off;
proxy_cache_methods GET HEAD;
proxy_cache_background_update on;
proxy_cache_use_stale error timeout updating;
proxy_cache_valid 200 206 301 302 15s;  # this time is overridden by the expires 30d directive in the secondary proxy

## These response headers are ignored from upstream responses
proxy_ignore_headers X-Accel-Expires;
proxy_ignore_headers Expires;
proxy_ignore_headers Cache-Control;
proxy_cache_lock on;

## Settings for handling range requests
slice 1m;
proxy_set_header  Range $slice_range;

## Set header to indicate proxy usage
map $scheme $proxied_by_value {
    "http"    "funes";
    "https"   "funes-ssl";
}
add_header Proxied-By $proxied_by_value;


# ====================== Expiration Rules ====================== #
## Configures expiration for upstream content based on content type.
map $upstream_http_content_type $content_type_expiry {
    default                     1m;
    'application/json'          1m;
    'image/jpeg'                max;                        # max means 10 years
    'image/gif'                 max;
    'image/png'                 max;
    'image/bmp'                 max;
    'image/webp'                max;
    'video/webm'                max;
    'video/ogg'                 max;
    'video/mp4'                 max;
}

map $host $host_expiry {
    default                     $content_type_expiry;
    # foo.com                     30d;                      # example of expiry by host
}

map $uri $uri_expiry {
    default                     $host_expiry;
    # "~*.gifv"                   30d;                      # example of expiry by uri/file extension
}

expires $uri_expiry;

## this doesn't appear to do anything, but was suggested as a fix for stale content refetching issues.
# add_header Cache-Control "stale-while-revalidate=2592000";      # 30 days

# ====================== Expiration Rules ====================== #


server {
    listen 80;
    listen 3128;
    listen 443 ssl;

    ssl_certificate     /usr/local/nginx/nginx.crt;
    ssl_certificate_key /usr/local/nginx/nginx.key;

    proxy_connect;
    proxy_connect_allow            443 563;
    proxy_connect_connect_timeout  2s;
    proxy_connect_read_timeout     2s;
    proxy_connect_send_timeout     2s;
    proxy_connect_address          127.0.0.1:443;

    location / {
        resolver 8.8.8.8;

        proxy_pass $scheme://$host$uri$is_args$args;
        proxy_cache fwd_proxy_cache;
        proxy_cache_key $scheme$request_method$host$uri$is_args$args$slice_range;
    }
}
